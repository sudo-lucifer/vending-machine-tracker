name: Test CI

on:
  push:
    branches: ['*']

env:
  PYTHON_VERSION: "3.9"
  POETRY_VERSION: "1.2.0"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres-test-service:
        image: postgres
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        run: |
          curl -sL https://install.python-poetry.org | POETRY_VERSION=${{ env.POETRY_VERSION }} python - -y
      - name: Configure Poetry
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.in-project true
      - name: Set up dependencies cache
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies if cache misses
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Run tests
        run: |
          poetry run pytest
        env:
          DJANGO_DB_NAME: ${{ secrets.POSTGRES_DB }}
          DJANGO_DB_USER: ${{ secrets.POSTGRES_USER }}
          DJANGO_DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
          retention-days: 7
  sonarcloud:
    # runs after test-and-coverage job
    needs: test
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Download coverage report artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
